name: Python Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8, 3.9, '3.10', '3.11']

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        # Install basic data science dependencies
        pip install numpy pandas matplotlib seaborn scikit-learn
        # Install testing dependencies
        pip install pytest flake8 black
        
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=88 --statistics
        
    - name: Check code formatting with black
      run: |
        black --check --diff .
        
    - name: Test Python scripts syntax
      run: |
        # Test that all Python files can be imported without syntax errors
        find . -name "*.py" -exec python -m py_compile {} \;
        
    - name: Run data-science ML classifier tests
      run: |
        cd data-science
        # Test that the ML classifier can be imported and basic functionality works
        python -c "from ml_classifier import IrisClassifier; classifier = IrisClassifier(); classifier.load_data(); print('✓ ML Classifier basic functionality test passed')"
        # Test that the script runs without errors (without visualization)
        python -c "from ml_classifier import IrisClassifier; classifier = IrisClassifier(); classifier.load_data(); classifier.explore_data(); classifier.prepare_data(); classifier.train_models(); classifier.evaluate_models(); print('✓ Complete ML pipeline test passed')"
